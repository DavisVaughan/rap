% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rap.R
\name{wap}
\alias{wap}
\alias{nap}
\alias{lap}
\alias{rap}
\title{Map over columns of a data frame simultaneously}
\usage{
wap(.tbl, .f)

nap(.tbl, .f)

lap(.tbl, .f)

rap(.tbl, ...)
}
\arguments{
\item{.tbl}{A data frame}

\item{.f}{a single formula}

\item{...}{named formulas

 The *lhs* of each formula indicates the type, in the [vctrs::vec_c()] sense.

 - empty or `list()`: no check is performed on the results of
 the rhs expressionand a list is returned.

 - `data.frame()`:  to indicate that the rhs should evaluate
 to a data frame of 1 row. The data frames don't need to be of a specific types
 and are are combined with [vctrs::vec_rbind()].

 - A data frame of a specific type, e.g. `data.frame(x = integer(), y = double())`
 The rhs should evaluate to a data frame of that type with 1 row.

 - Any other ptype that makes sense for [vctrs::vec_c()]. Each result must
 validate `vctrs::vec_size(.) == 1L` and are combined with
 `vctrs::vec_c(!!!, .ptype = .ptype)`

 The rhs of each formula uses columns of `.tbl`, and each stands for a single
 observation.}
}
\value{
- `wap()` returns a vector of the type specified by the lhs of the formula.
            The vector validates `vec_size() == nrow(.tbl)`. This is similar
            to [purrr::pmap()]

  - `nap()` returns *n*othing, and can be used for side effects, similar to [purrr:::pwalk()]

  - `rap()` adds a column to `.tbl` per formula in `...`
}
\description{
Map over columns of a data frame simultaneously
}
\examples{

library(purrr)
library(dplyr)
library(tibble)

tbl <- tibble(cyl = c(4, 6, 8), mpg = c(30, 25, 20))

# returns a list of 3 elements
tbl \%>\%
  wap(~ filter(mtcars, cyl == !!cyl, mpg < !!mpg))

# same
tbl \%>\%
  wap(list() ~ filter(mtcars, cyl == !!cyl, mpg < !!mpg))

# can specify the output type with the formula lhs
tbl \%>\%
  wap(integer() ~ nrow(filter(mtcars, cyl == !!cyl, mpg < !!mpg)))

# to make data frames
starwars \%>\%
  wap( data.frame() ~
    data.frame(species = length(species), films = length(films))
  )

# rap adds columns
tbl \%>\%
  rap(
     x =           ~ filter(mtcars, cyl == !!cyl, mpg < !!mpg),
     n = integer() ~ nrow(x)
  )

}
